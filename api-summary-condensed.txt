# Enhanced API Endpoint Summary (updated 2025-06-08)

## ADVANCED FEATURES AVAILABLE:

**Search & Filtering:** Use POST /api/v2/{resource}/search with filters, sorting, search, includes, aggregates
**Query Parameters:** include (relationships), with_count, with_sum, with_avg, with_min, with_max, with_trashed, only_trashed
**Batch Operations:** POST/PATCH/DELETE /api/v2/{resource}/batch for bulk operations
**Restore Operations:** POST /api/v2/{resource}/{id}/restore and /api/v2/{resource}/batch/restore

## Standard CRUD Operations
Unless otherwise specified, every resource supports: GET, POST, PATCH, DELETE

## Resources (use /api/v2/ prefix):
- **users** - System users with crews, entries relationships
- **crews** - Work crews with user assignments  
- **equipment** - Equipment/vehicles with assignments
- **default-tasks** - Template tasks (supports restore)
- **jobs** - Work jobs with tasks, customer, entries relationships
- **tasks** - Job tasks with entries, job relationships
- **entries** - Time entries with user, job, task relationships (supports restore)
- **entry-details** - Entry detail records (supports restore)
- **clock-entries** - Clock in/out records (supports restore)
- **events** - Calendar/schedule events (supports restore)
- **notes** - Notes and comments
- **companies** - Company records
- **customers** - Customer records (supports restore)

## Special Endpoints:
- **Job-Task Relations:** /api/v2/jobs/{job}/tasks/* for managing task associations
- **Search:** POST /api/v2/{resource}/search for advanced filtering
- **Batch:** POST/PATCH/DELETE /api/v2/{resource}/batch for bulk operations
- **Restore:** POST /api/v2/{resource}/{id}/restore for undeleting

## Query Examples:
- GET /api/v2/users?include=crews,entries&with_count=entries&with_sum=entries.hours
- POST /api/v2/jobs/search with body: {"filters": [{"field": "status", "operator": "=", "value": "active"}], "includes": [{"relation": "customer"}, {"relation": "tasks"}]}
- PATCH /api/v2/users/batch with body: {"resources": {"1": {"name": "New Name"}}}

**Filter Operators:** =, !=, >, <, >=, <=, like, in, not_in, between, is_null, is_not_null
**Sort:** [{"field": "created_at", "direction": "desc"}]
**Aggregates:** [{"field": "hours", "function": "sum|avg|count|min|max"}]