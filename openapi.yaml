openapi: 3.0.3
info:
  title: Console
  description: ''
  version: '2'
servers:
  -
    url: 'https://blacklabsconsole.com'
paths:
  /api/crews/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/crews/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/crews:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/crews/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the crew.'
        example: 7
        required: true
        schema:
          type: integer
  /api/equipment/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/equipment/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/equipment:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/equipment/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the equipment.'
        example: 35
        required: true
        schema:
          type: integer
  /api/default-tasks/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/default-tasks/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/default-tasks/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/default-tasks:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/default-tasks/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the default task.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/default-tasks/{default_task}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_task
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/jobs/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/jobs/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/jobs:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/jobs/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the job.'
        example: 1
        required: true
        schema:
          type: integer
  /api/tasks/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/tasks/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/tasks:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/tasks/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/jobs/{job}/tasks/search':
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: job
        description: 'The job.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/jobs/{job}/tasks/batch':
    post:
      summary: 'Create a batch of new relation resources in a transaction-safe way.'
      operationId: createABatchOfNewRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Updates a batch of relation resources in a transaction-safe way.'
      operationId: updatesABatchOfRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of relation resources in a transaction-safe way.'
      operationId: deletesABatchOfRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: job
        description: 'The job.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/jobs/{job}/tasks/associate':
    post:
      summary: 'Associates resource with another resource in a transaction-safe way.'
      operationId: associatesResourceWithAnotherResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                related_key:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
              required:
                - related_key
    parameters:
      -
        in: path
        name: job
        description: 'The job.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/jobs/{job}/tasks/{task}/dissociate':
    delete:
      summary: 'Disassociates resource from another resource in a transaction-safe way.'
      operationId: disassociatesResourceFromAnotherResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: job
        description: 'The job.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: task
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: omnis
  '/api/jobs/{job_id}/tasks':
    get:
      summary: 'Fetch the list of relation resources.'
      operationId: fetchTheListOfRelationResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Create new relation resource.'
      operationId: createNewRelationResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: job_id
        description: 'The ID of the job.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/jobs/{job_id}/':
    get:
      summary: 'Fetch a relation resource.'
      operationId: fetchARelationResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a relation resource in a transaction-safe way.'
      operationId: updateARelationResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Delete a relation resource.'
      operationId: deleteARelationResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: job_id
        description: 'The ID of the job.'
        example: 1
        required: true
        schema:
          type: integer
  /api/entries/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/entries/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/entries/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/entries:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/entries/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entry.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/entries/{entry}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: entry
        description: 'The entry.'
        example: 1
        required: true
        schema:
          type: integer
  /api/entry-details/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/entry-details/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/entry-details/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/entry-details:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/entry-details/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entry detail.'
        example: quia
        required: true
        schema:
          type: string
  '/api/entry-details/{entry_detail}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: entry_detail
        description: ''
        example: sint
        required: true
        schema:
          type: string
  /api/clock-entries/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/clock-entries/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/clock-entries/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/clock-entries:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/clock-entries/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the clock entry.'
        example: est
        required: true
        schema:
          type: string
  '/api/clock-entries/{clock_entry}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: clock_entry
        description: ''
        example: ad
        required: true
        schema:
          type: string
  /api/events/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/events/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/events/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/events:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/events/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 46
        required: true
        schema:
          type: integer
  '/api/events/{event}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: event
        description: 'The event.'
        example: 46
        required: true
        schema:
          type: integer
  /api/notes/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/notes/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/notes:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/notes/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the note.'
        example: reiciendis
        required: true
        schema:
          type: string
  /api/companies/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/companies/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/companies:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/companies/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: 2
        required: true
        schema:
          type: integer
  /api/customers/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/customers/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/customers/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/customers:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/customers/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: vero
        required: true
        schema:
          type: string
  '/api/customers/{customer}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: customer
        description: 'The customer.'
        example: beatae
        required: true
        schema:
          type: string
  /api/customer-companies/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/customer-companies/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/customer-companies/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/customer-companies:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/customer-companies/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer company.'
        example: officia
        required: true
        schema:
          type: string
  '/api/customer-companies/{customer_company}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: customer_company
        description: ''
        example: aut
        required: true
        schema:
          type: string
  /api/audits/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/audits/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/audits:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/audits/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the audit.'
        example: voluptatibus
        required: true
        schema:
          type: string
  /api/settings/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/settings/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/settings/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/settings:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/settings/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the setting.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/settings/{setting}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: setting
        description: 'The setting.'
        example: 1
        required: true
        schema:
          type: integer
  /api/default-notes/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/default-notes/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/default-notes/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/default-notes:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/default-notes/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the default note.'
        example: asperiores
        required: true
        schema:
          type: string
  '/api/default-notes/{default_note}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/default-notes/{default_note}/uploaded-files/search':
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: iste
        required: true
        schema:
          type: string
  '/api/default-notes/{default_note}/uploaded-files/batch':
    post:
      summary: 'Create a batch of new relation resources in a transaction-safe way.'
      operationId: createABatchOfNewRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Updates a batch of relation resources in a transaction-safe way.'
      operationId: updatesABatchOfRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of relation resources in a transaction-safe way.'
      operationId: deletesABatchOfRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/default-notes/{default_note}/uploaded-files/batch/restore':
    post:
      summary: 'Restores a batch of relation resources in a transaction-safe way.'
      operationId: restoresABatchOfRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: error
        required: true
        schema:
          type: string
  '/api/default-notes/{default_note}/uploaded-files/sync':
    patch:
      summary: 'Sync relation resources in a transaction-safe way.'
      operationId: syncRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                detaching:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: cum
        required: true
        schema:
          type: string
  '/api/default-notes/{default_note}/uploaded-files/toggle':
    patch:
      summary: 'Toggle relation resources in a transaction-safe way.'
      operationId: toggleRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: string
                  description: ''
                  example: null
                  nullable: false
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/default-notes/{default_note}/uploaded-files/{uploaded_file}/pivot':
    patch:
      summary: 'Update relation resource pivot in a transaction-safe wqy.'
      operationId: updateRelationResourcePivotInATransactionSafeWqy
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pivot:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - pivot
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: uploaded_file
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: omnis
  '/api/default-notes/{default_note}/uploaded-files/attach':
    post:
      summary: 'Attach resource to the relation in a transaction-safe way.'
      operationId: attachResourceToTheRelationInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                duplicates:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/default-notes/{default_note}/uploaded-files/detach':
    delete:
      summary: 'Detach resource to the relation in a transaction-safe way.'
      operationId: detachResourceToTheRelationInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: string
                  description: ''
                  example: null
                  nullable: false
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/default-notes/{default_note_id}/uploaded-files':
    get:
      summary: 'Fetch the list of relation resources.'
      operationId: fetchTheListOfRelationResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Create new relation resource.'
      operationId: createNewRelationResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note_id
        description: 'The ID of the default note.'
        example: adipisci
        required: true
        schema:
          type: string
  '/api/default-notes/{default_note_id}/':
    get:
      summary: 'Fetch a relation resource.'
      operationId: fetchARelationResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a relation resource in a transaction-safe way.'
      operationId: updateARelationResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Delete a relation resource.'
      operationId: deleteARelationResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note_id
        description: 'The ID of the default note.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/default-notes/{default_note}/uploaded-files/{uploaded_file}/restore':
    post:
      summary: 'Restores a previously deleted relation resource in a transaction-save way.'
      operationId: restoresAPreviouslyDeletedRelationResourceInATransactionSaveWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
      -
        in: path
        name: uploaded_file
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: architecto
  /api/jotform-forms/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/jotform-forms/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/jotform-forms/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/jotform-forms:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/jotform-forms/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the jotform form.'
        example: eveniet
        required: true
        schema:
          type: string
  '/api/jotform-forms/{jotform_form}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: jotform_form
        description: ''
        example: repellat
        required: true
        schema:
          type: string
  /api/jotform-questions/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/jotform-questions/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/jotform-questions/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/jotform-questions:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/jotform-questions/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the jotform question.'
        example: delectus
        required: true
        schema:
          type: string
  '/api/jotform-questions/{jotform_question}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: jotform_question
        description: ''
        example: quam
        required: true
        schema:
          type: string
  /api/used-job-colors/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/used-job-colors/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/used-job-colors/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/used-job-colors:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/used-job-colors/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the used job color.'
        example: ut
        required: true
        schema:
          type: string
  '/api/used-job-colors/{used_job_color}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: used_job_color
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
  /api/labor-forecast-types/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/labor-forecast-types/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/labor-forecast-types/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/labor-forecast-types:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/labor-forecast-types/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the labor forecast type.'
        example: ut
        required: true
        schema:
          type: string
  '/api/labor-forecast-types/{labor_forecast_type}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: labor_forecast_type
        description: ''
        example: nisi
        required: true
        schema:
          type: string
  /api/uploaded-files/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/uploaded-files/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/uploaded-files/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/uploaded-files:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/uploaded-files/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the uploaded file.'
        example: 6
        required: true
        schema:
          type: integer
  '/api/uploaded-files/{uploaded_file}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: uploaded_file
        description: ''
        example: 6
        required: true
        schema:
          type: integer
  /api/v1/entries/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/entries/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/entries/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/entries:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v1/entries/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entry.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/entries/{entry}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: entry
        description: 'The entry.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/entry-details/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/entry-details/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/entry-details/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/entry-details:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v1/entry-details/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entry detail.'
        example: earum
        required: true
        schema:
          type: string
  '/api/v1/entry-details/{entry_detail}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: entry_detail
        description: ''
        example: sit
        required: true
        schema:
          type: string
  /api/v2/internal/signin-link-for-email:
    get:
      summary: ''
      operationId: getApiV2InternalSigninLinkForEmail
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  url: 'https://N7JtyMncy90CIJH.blacklabsconsole.com/#/signin'
                properties:
                  url:
                    type: string
                    example: 'https://N7JtyMncy90CIJH.blacklabsconsole.com/#/signin'
      tags:
        - Endpoints
  /api/v2/internal/health:
    get:
      summary: ''
      operationId: getApiV2InternalHealth
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v2/internal/sms-numbers:
    get:
      summary: ''
      operationId: getApiV2InternalSmsNumbers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v2/internal/notifications-missing:
    post:
      summary: ''
      operationId: postApiV2InternalNotificationsMissing
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/twilio/inbound:
    post:
      summary: ''
      operationId: postApiV2TwilioInbound
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/twilio/status:
    post:
      summary: 'Handle delivery receipt (DLR) from Vonage.'
      operationId: handleDeliveryReceiptDLRFromVonage
      description: "We can test this locally, by using ngrok to expose our local server and changing Vonage's webhook to point to it."
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/vonage/inbound:
    post:
      summary: ''
      operationId: postApiV2VonageInbound
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/vonage/status:
    post:
      summary: 'Handle delivery receipt (DLR) from Vonage.'
      operationId: handleDeliveryReceiptDLRFromVonage
      description: "We can test this locally, by using ngrok to expose our local server and changing Vonage's webhook to point to it."
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/samsara/vehicles:
    get:
      summary: ''
      operationId: getApiV2SamsaraVehicles
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v2/samsara/assets:
    get:
      summary: ''
      operationId: getApiV2SamsaraAssets
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v2/jotform/get-forms:
    get:
      summary: ''
      operationId: getApiV2JotformGetForms
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  '/api/v2/jotform/get-form-questions/{formId}':
    get:
      summary: ''
      operationId: getApiV2JotformGetFormQuestionsFormId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: formId
        description: ''
        example: assumenda
        required: true
        schema:
          type: string
  /api/v2/jotform/add-dropdown-to-form:
    post:
      summary: ''
      operationId: postApiV2JotformAddDropdownToForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_id:
                  type: string
                  description: ''
                  example: nihil
                  nullable: false
                question_id:
                  type: string
                  description: ''
                  example: inventore
                  nullable: true
                add_question:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - form_id
                - add_question
  /api/v2/jotform/get-plan-details:
    get:
      summary: ''
      operationId: getApiV2JotformGetPlanDetails
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v2/jotform/get-limit-left:
    get:
      summary: ''
      operationId: getApiV2JotformGetLimitLeft
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v2/dropzone/upload:
    post:
      summary: 'Handles the file upload'
      operationId: handlesTheFileUpload
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/dropzone/upload/{file_id}':
    delete:
      summary: ''
      operationId: deleteApiV2DropzoneUploadFile_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: file_id
        description: 'The ID of the file.'
        example: 6
        required: true
        schema:
          type: integer
  /api/v2/crews/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/crews/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/crews:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/crews/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the crew.'
        example: 7
        required: true
        schema:
          type: integer
  /api/v2/equipment/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/equipment/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/equipment:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/equipment/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the equipment.'
        example: 35
        required: true
        schema:
          type: integer
  /api/v2/default-tasks/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/default-tasks/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/default-tasks/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/default-tasks:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/default-tasks/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the default task.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v2/default-tasks/{default_task}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_task
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/v2/jobs/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/jobs/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/jobs:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/jobs/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the job.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v2/tasks/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/tasks/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/tasks:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/tasks/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v2/jobs/{job}/tasks/search':
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: job
        description: 'The job.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v2/jobs/{job}/tasks/batch':
    post:
      summary: 'Create a batch of new relation resources in a transaction-safe way.'
      operationId: createABatchOfNewRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Updates a batch of relation resources in a transaction-safe way.'
      operationId: updatesABatchOfRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of relation resources in a transaction-safe way.'
      operationId: deletesABatchOfRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: job
        description: 'The job.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v2/jobs/{job}/tasks/associate':
    post:
      summary: 'Associates resource with another resource in a transaction-safe way.'
      operationId: associatesResourceWithAnotherResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                related_key:
                  type: string
                  description: ''
                  example: est
                  nullable: false
              required:
                - related_key
    parameters:
      -
        in: path
        name: job
        description: 'The job.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v2/jobs/{job}/tasks/{task}/dissociate':
    delete:
      summary: 'Disassociates resource from another resource in a transaction-safe way.'
      operationId: disassociatesResourceFromAnotherResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: job
        description: 'The job.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: task
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: excepturi
  '/api/v2/jobs/{job_id}/tasks':
    get:
      summary: 'Fetch the list of relation resources.'
      operationId: fetchTheListOfRelationResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Create new relation resource.'
      operationId: createNewRelationResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: job_id
        description: 'The ID of the job.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v2/jobs/{job_id}/':
    get:
      summary: 'Fetch a relation resource.'
      operationId: fetchARelationResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a relation resource in a transaction-safe way.'
      operationId: updateARelationResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Delete a relation resource.'
      operationId: deleteARelationResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: job_id
        description: 'The ID of the job.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v2/entries/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/entries/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/entries/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/entries:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/entries/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entry.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v2/entries/{entry}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: entry
        description: 'The entry.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v2/entry-details/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/entry-details/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/entry-details/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/entry-details:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/entry-details/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entry detail.'
        example: enim
        required: true
        schema:
          type: string
  '/api/v2/entry-details/{entry_detail}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: entry_detail
        description: ''
        example: autem
        required: true
        schema:
          type: string
  /api/v2/clock-entries/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/clock-entries/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/clock-entries/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/clock-entries:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/clock-entries/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the clock entry.'
        example: repellat
        required: true
        schema:
          type: string
  '/api/v2/clock-entries/{clock_entry}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: clock_entry
        description: ''
        example: ab
        required: true
        schema:
          type: string
  /api/v2/events/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/events/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/events/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/events:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/events/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 46
        required: true
        schema:
          type: integer
  '/api/v2/events/{event}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: event
        description: 'The event.'
        example: 46
        required: true
        schema:
          type: integer
  /api/v2/notes/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/notes/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/notes:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/notes/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the note.'
        example: eveniet
        required: true
        schema:
          type: string
  /api/v2/companies/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/companies/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/companies:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/companies/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: 2
        required: true
        schema:
          type: integer
  /api/v2/customers/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/customers/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/customers/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/customers:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/customers/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: repellat
        required: true
        schema:
          type: string
  '/api/v2/customers/{customer}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: customer
        description: 'The customer.'
        example: dolorum
        required: true
        schema:
          type: string
  /api/v2/customer-companies/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/customer-companies/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/customer-companies/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/customer-companies:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/customer-companies/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer company.'
        example: ut
        required: true
        schema:
          type: string
  '/api/v2/customer-companies/{customer_company}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: customer_company
        description: ''
        example: et
        required: true
        schema:
          type: string
  /api/v2/audits/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/audits/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/audits:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/audits/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the audit.'
        example: impedit
        required: true
        schema:
          type: string
  /api/v2/settings/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/settings/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/settings/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/settings:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/settings/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the setting.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v2/settings/{setting}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: setting
        description: 'The setting.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v2/default-notes/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/default-notes/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/default-notes/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/default-notes:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/default-notes/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the default note.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note}/uploaded-files/search':
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note}/uploaded-files/batch':
    post:
      summary: 'Create a batch of new relation resources in a transaction-safe way.'
      operationId: createABatchOfNewRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Updates a batch of relation resources in a transaction-safe way.'
      operationId: updatesABatchOfRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of relation resources in a transaction-safe way.'
      operationId: deletesABatchOfRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note}/uploaded-files/batch/restore':
    post:
      summary: 'Restores a batch of relation resources in a transaction-safe way.'
      operationId: restoresABatchOfRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note}/uploaded-files/sync':
    patch:
      summary: 'Sync relation resources in a transaction-safe way.'
      operationId: syncRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                detaching:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note}/uploaded-files/toggle':
    patch:
      summary: 'Toggle relation resources in a transaction-safe way.'
      operationId: toggleRelationResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: string
                  description: ''
                  example: null
                  nullable: false
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note}/uploaded-files/{uploaded_file}/pivot':
    patch:
      summary: 'Update relation resource pivot in a transaction-safe wqy.'
      operationId: updateRelationResourcePivotInATransactionSafeWqy
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pivot:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - pivot
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
      -
        in: path
        name: uploaded_file
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: non
  '/api/v2/default-notes/{default_note}/uploaded-files/attach':
    post:
      summary: 'Attach resource to the relation in a transaction-safe way.'
      operationId: attachResourceToTheRelationInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                duplicates:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note}/uploaded-files/detach':
    delete:
      summary: 'Detach resource to the relation in a transaction-safe way.'
      operationId: detachResourceToTheRelationInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: string
                  description: ''
                  example: null
                  nullable: false
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note_id}/uploaded-files':
    get:
      summary: 'Fetch the list of relation resources.'
      operationId: fetchTheListOfRelationResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Create new relation resource.'
      operationId: createNewRelationResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note_id
        description: 'The ID of the default note.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note_id}/':
    get:
      summary: 'Fetch a relation resource.'
      operationId: fetchARelationResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a relation resource in a transaction-safe way.'
      operationId: updateARelationResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Delete a relation resource.'
      operationId: deleteARelationResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note_id
        description: 'The ID of the default note.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/v2/default-notes/{default_note}/uploaded-files/{uploaded_file}/restore':
    post:
      summary: 'Restores a previously deleted relation resource in a transaction-save way.'
      operationId: restoresAPreviouslyDeletedRelationResourceInATransactionSaveWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: default_note
        description: ''
        example: 2
        required: true
        schema:
          type: integer
      -
        in: path
        name: uploaded_file
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: neque
  /api/v2/jotform-forms/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/jotform-forms/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/jotform-forms/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/jotform-forms:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/jotform-forms/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the jotform form.'
        example: et
        required: true
        schema:
          type: string
  '/api/v2/jotform-forms/{jotform_form}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: jotform_form
        description: ''
        example: necessitatibus
        required: true
        schema:
          type: string
  /api/v2/jotform-questions/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/jotform-questions/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/jotform-questions/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/jotform-questions:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/jotform-questions/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the jotform question.'
        example: hic
        required: true
        schema:
          type: string
  '/api/v2/jotform-questions/{jotform_question}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: jotform_question
        description: ''
        example: molestias
        required: true
        schema:
          type: string
  /api/v2/used-job-colors/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/used-job-colors/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/used-job-colors/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/used-job-colors:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/used-job-colors/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the used job color.'
        example: repellendus
        required: true
        schema:
          type: string
  '/api/v2/used-job-colors/{used_job_color}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: used_job_color
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  /api/v2/labor-forecast-types/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/labor-forecast-types/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/labor-forecast-types/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/labor-forecast-types:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/labor-forecast-types/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the labor forecast type.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/v2/labor-forecast-types/{labor_forecast_type}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: labor_forecast_type
        description: ''
        example: et
        required: true
        schema:
          type: string
  /api/v2/uploaded-files/search:
    post:
      summary: 'Filters, sorts, and fetches the list of resources.'
      operationId: filtersSortsAndFetchesTheListOfResources
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/uploaded-files/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/uploaded-files/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v2/uploaded-files:
    get:
      summary: 'Fetches the list of resources.'
      operationId: fetchesTheListOfResources
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v2/uploaded-files/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the uploaded file.'
        example: 6
        required: true
        schema:
          type: integer
  '/api/v2/uploaded-files/{uploaded_file}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: uploaded_file
        description: ''
        example: 6
        required: true
        schema:
          type: integer
  /api/users/search:
    post:
      summary: 'Search Users'
      operationId: searchUsers
      description: "Search for users in the authenticated user's company."
      parameters:
        -
          in: query
          name: search
          description: 'Search the users (available searches: name, email, pin, note, employee_id, role, crew.name, created_at, updated_at, lang, notesAbout.note, employeeNotifications.message, notifications.data, permissions.name).'
          example: John
          required: false
          schema:
            type: string
            description: 'Search the users (available searches: name, email, pin, note, employee_id, role, crew.name, created_at, updated_at, lang, notesAbout.note, employeeNotifications.message, notifications.data, permissions.name).'
            example: John
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'John Doe'
                      email: '[email protected]'
                      pin: '1234'
                      note: 'This is a note'
                      employee_id: '1234'
                      role: admin
                      crew_id: 1
                      created_at: '2021-01-01T00:00:00.000000Z'
                      updated_at: '2021-01-01T00:00:00.000000Z'
                      lang: en
                  links:
                    first: 'http://api.local/api/v1/users?page=1'
                    last: 'http://api.local/api/v1/users?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    path: 'http://api.local/api/v1/users'
                    per_page: 15
                    to: 1
                    total: 1
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'John Doe'
                        email: '[email protected]'
                        pin: '1234'
                        note: 'This is a note'
                        employee_id: '1234'
                        role: admin
                        crew_id: 1
                        created_at: '2021-01-01T00:00:00.000000Z'
                        updated_at: '2021-01-01T00:00:00.000000Z'
                        lang: en
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'John Doe'
                        email:
                          type: string
                          example: '[email protected]'
                        pin:
                          type: string
                          example: '1234'
                        note:
                          type: string
                          example: 'This is a note'
                        employee_id:
                          type: string
                          example: '1234'
                        role:
                          type: string
                          example: admin
                        crew_id:
                          type: integer
                          example: 1
                        created_at:
                          type: string
                          example: '2021-01-01T00:00:00.000000Z'
                        updated_at:
                          type: string
                          example: '2021-01-01T00:00:00.000000Z'
                        lang:
                          type: string
                          example: en
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://api.local/api/v1/users?page=1'
                      last:
                        type: string
                        example: 'http://api.local/api/v1/users?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: 'http://api.local/api/v1/users'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 1
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                includes:
                  type: array
                  description: 'The relations that are allowed to be included together with a resource.'
                  example:
                    -
                      relation: crew
                  items:
                    type: string
                filter:
                  type: array
                  description: 'The attributes that are used for filtering.'
                  example:
                    -
                      field: name
                      operator: '='
                      value: John
                  items:
                    type: string
                sort:
                  type: array
                  description: 'The attributes that are used for sorting.'
                  example:
                    -
                      field: name
                      direction: asc
                  items:
                    type: string
                scopes:
                  type: array
                  description: 'The scopes that are used for filtering.'
                  example:
                    -
                      name: active
                      parameters:
                        - true
                  items:
                    type: string
  /api/users/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
  /api/users/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
  /api/users:
    get:
      summary: 'Get all Users'
      operationId: getAllUsers
      description: "List all users for the authenticated user's company."
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - User
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - User
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/{user}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v2/users/search:
    post:
      summary: 'Search Users'
      operationId: searchUsers
      description: "Search for users in the authenticated user's company."
      parameters:
        -
          in: query
          name: search
          description: 'Search the users (available searches: name, email, pin, note, employee_id, role, crew.name, created_at, updated_at, lang, notesAbout.note, employeeNotifications.message, notifications.data, permissions.name).'
          example: John
          required: false
          schema:
            type: string
            description: 'Search the users (available searches: name, email, pin, note, employee_id, role, crew.name, created_at, updated_at, lang, notesAbout.note, employeeNotifications.message, notifications.data, permissions.name).'
            example: John
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'John Doe'
                      email: '[email protected]'
                      pin: '1234'
                      note: 'This is a note'
                      employee_id: '1234'
                      role: admin
                      crew_id: 1
                      created_at: '2021-01-01T00:00:00.000000Z'
                      updated_at: '2021-01-01T00:00:00.000000Z'
                      lang: en
                  links:
                    first: 'http://api.local/api/v1/users?page=1'
                    last: 'http://api.local/api/v1/users?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    path: 'http://api.local/api/v1/users'
                    per_page: 15
                    to: 1
                    total: 1
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'John Doe'
                        email: '[email protected]'
                        pin: '1234'
                        note: 'This is a note'
                        employee_id: '1234'
                        role: admin
                        crew_id: 1
                        created_at: '2021-01-01T00:00:00.000000Z'
                        updated_at: '2021-01-01T00:00:00.000000Z'
                        lang: en
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'John Doe'
                        email:
                          type: string
                          example: '[email protected]'
                        pin:
                          type: string
                          example: '1234'
                        note:
                          type: string
                          example: 'This is a note'
                        employee_id:
                          type: string
                          example: '1234'
                        role:
                          type: string
                          example: admin
                        crew_id:
                          type: integer
                          example: 1
                        created_at:
                          type: string
                          example: '2021-01-01T00:00:00.000000Z'
                        updated_at:
                          type: string
                          example: '2021-01-01T00:00:00.000000Z'
                        lang:
                          type: string
                          example: en
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://api.local/api/v1/users?page=1'
                      last:
                        type: string
                        example: 'http://api.local/api/v1/users?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: 'http://api.local/api/v1/users'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 1
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                includes:
                  type: array
                  description: 'The relations that are allowed to be included together with a resource.'
                  example:
                    -
                      relation: crew
                  items:
                    type: string
                filter:
                  type: array
                  description: 'The attributes that are used for filtering.'
                  example:
                    -
                      field: name
                      operator: '='
                      value: John
                  items:
                    type: string
                sort:
                  type: array
                  description: 'The attributes that are used for sorting.'
                  example:
                    -
                      field: name
                      direction: asc
                  items:
                    type: string
                scopes:
                  type: array
                  description: 'The scopes that are used for filtering.'
                  example:
                    -
                      name: active
                      parameters:
                        - true
                  items:
                    type: string
  /api/v2/users/batch:
    post:
      summary: 'Creates a batch of new resources in a transaction-safe way.'
      operationId: createsABatchOfNewResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    patch:
      summary: 'Update a batch of resources in a transaction-safe way.'
      operationId: updateABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resources:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - resources
    delete:
      summary: 'Deletes a batch of resources in a transaction-safe way.'
      operationId: deletesABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
  /api/v2/users/batch/restore:
    post:
      summary: 'Restores a batch of resources in a transaction-safe way.'
      operationId: restoresABatchOfResourcesInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
  /api/v2/users:
    get:
      summary: 'Get all Users'
      operationId: getAllUsers
      description: "List all users for the authenticated user's company."
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - User
    post:
      summary: 'Creates new resource in a transaction-safe way.'
      operationId: createsNewResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
  '/api/v2/users/{id}':
    get:
      summary: 'Fetches resource.'
      operationId: fetchesResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated.
                properties:
                  error:
                    type: string
                    example: Unauthenticated.
      tags:
        - User
    put:
      summary: 'Update a resource in a transaction-safe way.'
      operationId: updateAResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
    delete:
      summary: 'Deletes a resource.'
      operationId: deletesAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v2/users/{user}/restore':
    post:
      summary: 'Restore previously deleted resource in a transaction-safe way.'
      operationId: restorePreviouslyDeletedResourceInATransactionSafeWay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: User
    description: "Users are the people who use the application.\n\nUsers longer description."
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your global settings and clicking <b>Generate API token</b>.'
security:
  -
    default: []
